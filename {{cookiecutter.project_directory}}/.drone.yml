kind: pipeline
type: docker
name: unit_test

workspace:
  path: /app

steps:
  - name: export requirements file
    image: python:3.9-slim
    commands:
      - pip install --upgrade pip poetry
      - poetry export -f requirements.txt --output /project/requirements.txt --without-hashes --with dev
    volumes:
      - name: pythonpath
        path: /project

  - name: test
    image: python:3.9-slim
    environment:
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONUNBUFFERED: 1
    commands:
      - export $(grep -v '^#' ./env/drone.env | xargs)
      - apt-get update && apt-get install -y libpq-dev gcc
      - pip install --upgrade pip
      - pip install --no-cache-dir --upgrade -r /project/requirements.txt
      - pytest -vv -p no:warnings

    volumes:
      - name: pythonpath
        path: /project

  - name: notification
    image: appleboy/drone-telegram
    when:
      status:
        - failure
        - success
    settings:
      token:
        from_secret: Telegram_gggoingdown_CI_bot_token
      to:
        from_secret: Telegram_chat_id
      message: >
        {{#success build.status}}
          Repository: {{repo.name}}
          Branch: {{commit.branch}}
          Commit message:  {{commit.message}}
          Message: Test succeeded. Good job.
          Version: {{build.number}}
        {{else}}
          Repository: {{repo.name}}
          Branch: {{commit.branch}}
          Version: {{build.number}}
          Commit message:  {{commit.message}}
          Message: Test failed. Fix me please.
          Version: {{build.number}}
        {{/success}}


trigger:
  event:
    - push

volumes:
  - name: pythonpath
    temp: {}
